############################
###         Logs         ###
############################

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_cloudtrail*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:cloudtrail:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_cloudwatch*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:cloudwatch:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_cloudwatch_logs*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:cloudwatchlogs:log
priority = 2

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_config*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:config:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_configuration_tool*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:configtool:log
priority = 2

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_description*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:description:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_metadata*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:metadata:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_s3*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:s3:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_inspector*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:inspector:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_kinesis*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:kinesis:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_config_rule*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:configrule:log
priority = 2

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*splunk_ta_aws_logs*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:logs:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_sqs_based_s3*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:sqsbaseds3:log
priority = 2

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_billing*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:billing:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_sns*.log*]
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:sns:alert:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_sqs*.log*]
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:sqs:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*Splunk_TA_aws*rest*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:resthandler:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*Splunk_TA_aws*util.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = aws:util:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)Splunk_TA_aws-RestEndpoints*.log*]
sourcetype = aws:restendpoints:log
priority = 10

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_proxy_conf*.log*]
sourcetype = aws:proxy-conf:log
priority = 10

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_s3util*.log*]
sourcetype = aws:s3util:log
priority = 10

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)regex_dimensions*.log*]
sourcetype = aws:regex-dimensions:log
priority = 10

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*Splunk_TA_aws_ta_util*.log*]
sourcetype=aws:ta-util:log
priority = 100

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*aws_*.log*]
EXTRACT-traceback_and_error = (Traceback \(most recent call last\)):(?P<Traceback>[\S|\s]*\S(\r\n|\n|\r)(?P<ErrorCode>[^:]*):(?P<ErrorDetail>.*)$)

##################################
###         CloudTrail         ###
##################################

## Apply the following properties to sample text files by extension
[source::....aws_cloudtrail]
sourcetype = aws:cloudtrail

# Set sourcetype to aws:cloudtrail when ingesting data
[aws:cloudtrail]
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
TIME_PREFIX = \"eventTime\"\s*\:\s*\"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S%Z
MAX_TIMESTAMP_LOOKAHEAD = 28
KV_MODE = json

## Extraction ##
################
# non-CIM
# AWS ARN Scheme
# arn:partition:service:region:account-id:resource
# arn:partition:service:region:account-id:resourcetype/resource
# arn:partition:service:region:account-id:resourcetype:resource
REPORT-user-for-aws-cloudtrail-acctmgmt = user-for-aws-cloudtrail-acctmgmt
REPORT-user-for-aws-cloudtrail-acctmgmt-2 = user-for-aws-cloudtrail-acctmgmt-2

## Aliases ##
#############
# non-CIM
FIELDALIAS-requestParameters-for-aws-cloudtrail = requestParameters AS desc
FIELDALIAS-eventTime-for-aws-cloudtrail = eventTime AS start_time
FIELDALIAS-responseElements.credentials.accessKeyId-for-aws-cloudtrail = responseElements.credentials.accessKeyId AS temp_access_key
FIELDALIAS-userIdentity.accessKeyId-for-aws-cloudtrail = userIdentity.accessKeyId AS user_access_key

# Common CIM
FIELDALIAS-eventSource-for-aws-cloudtrail-app = eventSource AS app
FIELDALIAS-eventSource-for-aws-cloudtrail-dvc = eventSource AS dvc
FIELDALIAS-awsRegion-for-aws-cloudtrail_region = awsRegion AS region
FIELDALIAS-eventName-for-aws-cloudtrail_signature = eventName AS signature
FIELDALIAS-sourceIPAddress-for-aws-cloudtrail-src = sourceIPAddress AS src
FIELDALIAS-sourceIPAddress-for-aws-cloudtrail-src_ip = sourceIPAddress AS src_ip
FIELDALIAS-userAgent-for-aws-cloudtrail_user_agent = userAgent AS user_agent
FIELDALIAS-accountId_user_group_id = userIdentity.accountId AS user_group_id
FIELDALIAS-accountId_vendor_account = userIdentity.accountId AS vendor_account
FIELDALIAS-awsRegion-for-aws-cloudtrail_vendor_region = awsRegion AS vendor_region

# Authentication CIM
FIELDALIAS-errorMessage-for-aws-cloudtrail-reason = errorMessage AS reason

# Change CIM
FIELDALIAS-eventName-for-aws-cloudtrail-command = eventName AS command
FIELDALIAS-requestParameters.instancesSet.items{}.imageId-for-aws-cloudtrail-image_id = requestParameters.instancesSet.items{}.imageId as image_id
FIELDALIAS-requestParameters.instanceType-for-aws-cloudtrail-instance_type = requestParameters.instanceType as instance_type
FIELDALIAS-errorMessage-for-aws-cloudtrail-result = errorMessage AS result
FIELDALIAS-errorCode-for-aws-cloudtrail-result_id = errorCode AS result_id

# Change CIM - Network dataset
FIELDALIAS-ruleAction-for-aws-cloudtrail-rule_action = requestParameters.ruleAction AS rule_action

##########
# non-CIM
EVAL-msg = coalesce('errorCode',"success")
EVAL-user_arn = coalesce('userIdentity.arn', 'requestParameters.roleArn')
EVAL-userName = coalesce('userIdentity.userName', 'userIdentity.sessionContext.sessionIssuer.userName', if(isnull('userIdentity.arn'), mvindex(split(mvindex(split('requestParameters.roleArn',":"), -1), "/"), -1), mvindex(split(mvindex(split('userIdentity.arn',":"), -1), "/"), -1)))

# Common CIM
EVAL-user = case(eventName="CreateUser", 'responseElements.user.userId',\
                 eventName="DeleteUser" OR eventName="UpdateUser" OR eventName="DeleteLoginProfile", 'requestParameters.userName',\
                 (eventName="PutBucketAcl" AND 'requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Grantee.xsi:type'="CanonicalUser"), 'requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Grantee.DisplayName',\
                 (eventName="PutBucketAcl" AND 'requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Grantee.xsi:type'="Group"), 'requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Grantee.URI',\
                 1=1, 'userIdentity.principalId')
EVAL-user_id = case(eventName="CreateUser", 'responseElements.user.userId',\
                    eventName="DeleteUser" OR eventName="UpdateUser", 'requestParameters.userName',\
                    1=1, 'userIdentity.principalId')
EVAL-user_type = if(eventName="PutBucketAcl", 'requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Grantee.xsi:type', 'userIdentity.type')
# Authentication CIM
EVAL-aws_account_id = if('userIdentity.type'="AWSAccount" OR 'userIdentity.type'="AWSService", recipientAccountId, 'userIdentity.accountId')

# Change CIM
# Supporting ES A&I, object_id mapping is replicated in the dest field. Default to dest=eventSource
EVAL-dest = case(like(eventName, "%Instances"), if((eventName="RunInstances"), 'responseElements.instancesSet.items{}.instanceId', 'requestParameters.instancesSet.items{}.instanceId'),\
                 like(eventName, "%SecurityGroup%"), if((eventName="CreateSecurityGroup"), 'responseElements.groupId', 'requestParameters.groupId'),\
                 like(eventName, "%Volume"), if((eventName="CreateVolume"), 'responseElements.volumeId', 'requestParameters.volumeId'),\
                 like(eventName, "%NetworkAcl%"), if((eventName="CreateNetworkAclEntry"), 'requestParameters.networkAclId', 'responseElements.networkAcl.networkAclId'),\
                 (like(eventName, "%Bucket%") OR eventName="PutObject"), 'requestParameters.bucketName',\
                 eventName="CreateUser", 'responseElements.user.userId',\
                 eventName="UpdateUser" OR eventName="DeleteUser" OR eventName="DeleteLoginProfile", 'requestParameters.userName',\
                 1 == 1, eventSource)
# object field mappings differ for various Change event types, and must be specified uniquely.
EVAL-object = case(like(eventName, "%Instances"), if((eventName="RunInstances"), 'responseElements.instancesSet.items{}.instanceId', 'requestParameters.instancesSet.items{}.instanceId'),\
                   like(eventName, "%SecurityGroup%"), if((eventName="CreateSecurityGroup"), 'responseElements.groupId', 'requestParameters.groupId'),\
                   like(eventName, "%Volume"), if((eventName="CreateVolume"), 'responseElements.volumeId', 'requestParameters.volumeId'),\
                   like(eventName, "%NetworkAcl%"), if((eventName="CreateNetworkAclEntry"), 'requestParameters.networkAclId', 'responseElements.networkAcl.networkAclId'),\
                   (like(eventName, "%Bucket%") OR eventName="PutObject"), 'requestParameters.bucketName',\
                   eventName="CreateUser", 'responseElements.user.userName',\
                   eventName="UpdateUser" OR eventName="DeleteUser" OR eventName="DeleteLoginProfile", 'requestParameters.userName')
# object_id field mappings differ for various Change event types, and must be specified uniquely.
EVAL-object_id = case(like(eventName, "%Instances"), if((eventName="RunInstances"), 'responseElements.instancesSet.items{}.instanceId', 'requestParameters.instancesSet.items{}.instanceId'),\
                      like(eventName, "%SecurityGroup%"), if((eventName="CreateSecurityGroup"), 'responseElements.groupId', 'requestParameters.groupId'),\
                      like(eventName, "%Volume"), if((eventName="CreateVolume"), 'responseElements.volumeId', 'requestParameters.volumeId'),\
                      like(eventName, "%NetworkAcl%"), if((eventName="CreateNetworkAclEntry"), 'requestParameters.networkAclId', 'responseElements.networkAcl.networkAclId'),\
                      (like(eventName, "%Bucket%") OR eventName="PutObject"), 'requestParameters.bucketName',\
                      eventName="CreateUser", 'responseElements.user.userId',\
                      eventName="UpdateUser" OR eventName="DeleteUser" OR eventName="DeleteLoginProfile", 'requestParameters.userName')

# Change CIM - Network dataset
EVAL-dest_ip_range = case(like(eventName, "%SecurityGroupEgress"), 'requestParameters.ipPermissions.items{}.ipRanges.items{}.cidrIp',\
                         (like(eventName, "%NetworkAcl%") AND 'requestParameters.egress'="true"),  'requestParameters.cidrBlock')
EVAL-dest_port_range = case(like(eventName, "%SecurityGroupEgress%"), mvappend('requestParameters.ipPermissions.items{}.toPort','requestParameters.ipPermissions.items{}.fromPort'),\
                            (like(eventName, "%NetworkAcl%") AND 'requestParameters.egress'="true"), mvappend('requestParameters.portRange.from','requestParameters.portRange.to'))
EVAL-direction = case(((like(eventName, "%NetworkAcl%") AND 'requestParameters.egress'="false") OR like(eventName, "%SecurityGroupIngress")), "Inbound",\
                      ((like(eventName, "%NetworkAcl%") AND 'requestParameters.egress'="true") OR like(eventName, "%SecurityGroupEgress")), "Outbound")
EVAL-object_attrs = if(eventName="PutBucketAcl", 'requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Permission', null())
EVAL-protocol = if(like(eventName, "%SecurityGroup%"), 'requestParameters.ipPermissions.items{}.ipProtocol', null())
EVAL-protocol_code = if(like(eventName, "%NetworkAcl%"), 'requestParameters.aclProtocol', null())
EVAL-src_ip_range = case(like(eventName, "%SecurityGroupIngress"), 'requestParameters.ipPermissions.items{}.ipRanges.items{}.cidrIp',\
                    (like(eventName, "%NetworkAcl%") AND 'requestParameters.egress'="false"),  'requestParameters.cidrBlock')
EVAL-src_port_range = case(like(eventName, "%SecurityGroupIngress%"), mvappend('requestParameters.ipPermissions.items{}.toPort','requestParameters.ipPermissions.items{}.fromPort'),\
                      (like(eventName, "%NetworkAcl%") AND 'requestParameters.egress'="false"), mvappend('requestParameters.portRange.from','requestParameters.portRange.to'))

# If eventName!=ConsoleLogin then authentication_method will be left blank
# [aws_cloudtrail_multifactor_auth]
# TAGS multifactor, cloud
EVAL-authentication_method = case(('additionalEventData.MFAUsed'="Yes" AND eventName="ConsoleLogin"), "MFA", ('additionalEventData.MFAUsed'="No" AND eventName="ConsoleLogin"), "SFA")

EVAL-errorCode = coalesce('errorCode', if(like('responseElements.ConsoleLogin', "Failure"), "failure", "success"), "success")

# eventtype for AssumeRole events - CIM fields src_user, src_user_id, src_user_type, and user_role. Only mapped for AssumeRole* events. They're blank for non-AssumeRole* events
# [eventtype::aws_cloudtrail_assumeRole_auth]
# TAGS assume_role
EVAL-src_user = if((eventName="AssumeRole" OR eventName="AssumeRoleWithSAML" OR eventName="AssumeRoleWithWebIdentity" OR like(eventName,"%User") OR eventName="PutBucketAcl" OR eventName="DeleteLoginProfile") AND 'userIdentity.type'!="AWSService", 'userIdentity.principalId', null())
EVAL-src_user_id = if((eventName="AssumeRole" OR eventName="AssumeRoleWithSAML" OR eventName="AssumeRoleWithWebIdentity" OR like(eventName,"%User")) AND 'userIdentity.type'!="AWSService", 'userIdentity.principalId', null())
EVAL-src_user_role = if((eventName="AssumeRole" OR eventName="AssumeRoleWithSAML" OR eventName="AssumeRoleWithWebIdentity") AND 'userIdentity.type'="AssumedRole", 'userIdentity.arn', null())
EVAL-src_user_type = if((eventName="AssumeRole" OR eventName="AssumeRoleWithSAML" OR eventName="AssumeRoleWithWebIdentity") AND 'userIdentity.type'!="AWSService", 'userIdentity.type', null())
EVAL-user_role = if(eventName="AssumeRole" OR eventName="AssumeRoleWithSAML" OR eventName="AssumeRoleWithWebIdentity", case('userIdentity.type'="AssumedRole", 'requestParameters.roleArn', 'userIdentity.type'!="AWSService", 'responseElements.assumedRoleUser.arn', 'userIdentity.type'="AWSService", null()), null())

## Lookups ##
#############
# non-CIM
LOOKUP-vendor-product-for-aws-cloudtrail = vendor-product-for-aws-cloudtrail sourcetype OUTPUTNEW vendor, product
LOOKUP-changetype-for-aws-cloudtrail = change_type-for-aws-cloudtrail eventSource OUTPUTNEW change_type

# Common CIM
LOOKUP-action-status-for-aws-cloudtrail = aws-cloudtrail-action-status-lookup eventName, errorCode OUTPUTNEW action, status

# Change CIM
LOOKUP-object_category-for-aws-cloudtrail = aws_cloudtrail_eventname_lookup eventName OUTPUTNEW object_category

# Change CIM - Network dataset
LOOKUP-protocol-for-aws-cloudtrail = vpcflow_protocol_code_lookup protocol_code OUTPUT protocol

##################################
###         CloudWatch         ###
##################################

[aws:cloudwatch]
# KV_MODE = multi_tsv_cloudwatch
KV_MODE = JSON
TIME_PREFIX = "timestamp":\s*"

# Extract
EVAL-Average = case(Average=="", 0, Average!="", Average)
EVAL-Maximum = case(Average=="", 0, Average!="", Maximum)
EVAL-Minimum = case(Average=="", 0, Average!="", Minimum)

# Extraction
# EC2 Metrics
EVAL-cpu_load_percent = case(metric_name="CPUUtilization", Average)
EVAL-read_ops = case(metric_name="DiskReadOps" OR metric_name="VolumeReadOps" OR metric_name="ReadIOPS", Sum)
EVAL-write_ops = case(metric_name="DiskWriteOps" OR metric_name="VolumeWriteOps" OR metric_name="WriteIOPS", Sum)
EVAL-bytes_in = case(metric_name="NetworkIn", Sum)
EVAL-bytes_out = case(metric_name="NetworkOut", Sum)
EXTRACT-vm_id = InstanceId=\[(?<vm_id>i-\S+)\]
EVAL-network_usage_in = case(metric_name="NetworkIn", Sum)
EVAL-network_usage_out = case(metric_name="NetworkOut", Sum)
EVAL-network_packets_in = case(metric_name="NetworkPacketsIn", Sum)
EVAL-network_packets_out = case(metric_name="NetworkPacketsOut", Sum)
EVAL-storage_ops_read = case(metric_name="DiskReadOps" OR metric_name="VolumeReadOps" OR metric_name="ReadIOPS", Sum)
EVAL-storage_ops_write = case(metric_name="DiskWriteOps" OR metric_name="VolumeWriteOps" OR metric_name="WriteIOPS", Sum)
EVAL-storage_usage_read = case(metric_name="DiskReadBytes", Sum)
EVAL-storage_usage_write = case(metric_name="DiskWriteBytes", Sum)

# Database Metrics
EVAL-bytes_sessions = case(metric_name="DatabaseConnections", Sum)
EVAL-bytes_sga_free_memory = case(metric_name="FreeableMemory", Sum)
EVAL-bytes_mem_free = case(metric_name="FreeableMemory", Sum)
EVAL-bytes_storage_free = case(metric_name="FreeStorageSpace", Sum)
EVAL-bytes_swap_used = case(metric_name="SwapUsage", Sum)
EVAL-bytes_read_latency = case(metric_name="ReadLatency", Sum)
EVAL-bytes_write_latency = case(metric_name="WriteLatency", Sum)

# ELB Metrics
EVAL-rtt = case(metric_name="Latency", Average)
EVAL-5xx_codes = case(metric_name="HTTPCode_ELB_5XX", Sum)

# Aliases
# Lookups
LOOKUP-vendor-product-for-aws-cloudwatch = vendor-product-for-aws-cloudtrail sourcetype OUTPUTNEW vendor,product,app

# unify account ID field
FIELDALIAS-aws-account-id = account_id as aws_account_id
REPORT-region = extract-region


[aws:cloudwatch:metric]
KV_MODE = none
DATETIME_CONFIG =
INDEXED_EXTRACTIONS = json
NO_BINARY_CHECK = true
TIMESTAMP_FIELDS = Timestamp
TRANSFORMS-metric_name_prefix = eval_aws_metric_name_prefix
METRIC-SCHEMA-TRANSFORMS = metric-schema:aws_cloudwatch_metric_schema


##################################
###           Billing          ###
##################################
[aws:billing]
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 1

# extraction
EVAL-report_month = strftime(_time, "%Y-%m")
EVAL-LinkedAccount = if(isnull(LinkedAccountName), if(isnull(LinkedAccountId), "Unspecified", LinkedAccountId), LinkedAccountName+" (" +LinkedAccountId + ")")
EVAL-ProductName = if(isnull(ProductName), if(isnull(ProductCode), "Unspecified", ProductCode), ProductName)
EVAL-AvailabilityZone = if(isnull(AvailabilityZone), "Unspecified", AvailabilityZone)

#compatible with old data
EVAL-S3KeyLastModified=if(isnull(S3KeyLastModified),strftime(strptime(mvindex(split(replace(source,"(\d{2}):(\d{2}):(\d{2})","\1 \2 \3"),":"),-1),"%a, %d %b %Y %H %M %S GMT"),"%Y-%m-%dT%H:%M:%S.000Z"),S3KeyLastModified)

# unify account ID field
FIELDALIAS-aws-account-id = PayerAccountId as aws_account_id

[aws:billing:cur]
SHOULD_LINEMERGE = false
TIME_PREFIX = lineItem/UsageStartDate=
TZ = GMT

# the sourcetype of the digest file is the sourcetype of billing cur + :digest
[aws:billing:cur:digest]
TRUNCATE = 8388608
TIME_PREFIX = lastModified"\s*:\s*"
TZ = GMT
KV_MODE = json

##################################
###         AWS Config         ###
##################################

# Notifications/Diff Payloads
[aws:config:notification]
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
TIME_PREFIX = configurationItemCaptureTime"\s*:\s*"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
TZ = GMT
MAX_TIMESTAMP_LOOKAHEAD = 28
KV_MODE = json
ANNOTATE_PUNCT = false

FIELDALIAS-dest = configurationItem.resourceType AS dest
FIELDALIAS-object = configurationItem.resourceId AS object
FIELDALIAS-object_id = configurationItem.ARN AS object_id
EVAL-change_type = "configuration"
EVAL-dvc = "AWS Config"
EVAL-status="success"
LOOKUP-action= aws_config_action_lookup status AS configurationItem.configurationItemStatus OUTPUT action
LOOKUP-object_category = aws_config_object_category_lookup type AS configurationItem.resourceType OUTPUT object_category

# unify account ID field
FIELDALIAS-aws-account-id = configurationItem.awsAccountId as aws_account_id
FIELDALIAS-region-for-aws-config = configurationItem.awsRegion AS region

# Configuration History/Snapshots Payloads
[aws:config]
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
TIME_PREFIX = configurationItemCaptureTime"\s*:\s*"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
TZ = GMT
MAX_TIMESTAMP_LOOKAHEAD = 28
KV_MODE = json
ANNOTATE_PUNCT = false

FIELDALIAS-dest = resourceType AS dest
FIELDALIAS-object = resourceId AS object
FIELDALIAS-object_id = ARN AS object_id
EVAL-change_type = "configuration"
EVAL-dvc = "AWS Config"
EVAL-status="success"
LOOKUP-action= aws_config_action_lookup status AS configurationItemStatus OUTPUT action
LOOKUP-object_category = aws_config_object_category_lookup type AS resourceType OUTPUT object_category

# unify account ID field
FIELDALIAS-aws-account-id = awsAccountId as aws_account_id
FIELDALIAS-region-for-aws-config = awsRegion AS region


##################################
###      AWS Config Rule       ###
##################################

[aws:config:rule]
EVAL-enabled = if(ConfigRuleState="ACTIVE",1,0)
EXTRACT-account_id_and_region = (?P<account_id>\d+):(?P<region>[\w-]+) in source

FIELDALIAS-aws-account-id = account_id as aws_account_id
FIELDALIAS-config_rule_state_as_status = ConfigRuleState as status
FIELDALIAS-config_rule_name_as_name = ConfigRuleName as name
FIELDALIAS-description_as_description = Description as description
FIELDALIAS-account_id_as_user_id = account_id as user_id
FIELDALIAS-source_owner_as_src_user = Source.Owner as src_user
FIELDALIAS-config_rule_invoked_time_as_time = ConfigRuleInvokedTime as time
FIELDALIAS-first_activated_time_as_time = FirstActivatedTime as time


##################################
###      AWS Description       ###
##################################


[aws:description]
MAX_TIMESTAMP_LOOKAHEAD = 1
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
KV_MODE = json
ANNOTATE_PUNCT = false

## Mapping for ITSI IaaS Module ## - https://docs.splunk.com/Documentation/ITSICSM/2.4.0/ITSICSM/AbouttheSplunkITSIModuleforCloudServices
## Enterprise Security Assets and Identities Framework Interface ##

## Extraction ##
################
# Mapping for ITSI IaaS Module
EXTRACT-extract_ec2_custom_tag = \"tags\"\:\s*\{(?P<custom_tag_str>(?:\"[^\"\s]+\"\:\s*\"[^\"\s]+\"(?:,\s)?)*)


## FIELDALIAS ##
################
# Enterprise Security Identities Framework Interface - IAM_USERS
FIELDALIAS-CreateDate-for-aws-description = CreateDate as startDate
FIELDALIAS-user-id-for-aws-description = UserId AS user_id
FIELDALIAS-username-for-aws-description = UserName AS user_name

# Enterprise Security Assets Framework Interface - EC2_INSTANCES
# fields image_name and instance_type are being mapped automatically
FIELDALIAS-image_name-for-assets-lookup = image.attributes.name AS image_name

# Mapping for ITSI IaaS Module
FIELDALIAS-availabiity_zone = zone AS availability_zone
FIELDALIAS-vm_name = tags.Name as vm_name
FIELDALIAS-vm_size = instance_type AS vm_size


## EVAL ##
##########
# Common CIM - [Enterprise Security Assets Framework Interface] and [ITSI IaaS Module] specific fields -- EVAL-ip,
# EVAL-vendor_account, EVAL-vendor_region, EVAL-vpc_id
EVAL-account_id = if(isnull(owner_id), account_id, owner_id)
# aws_account_id - unify account ID field
EVAL-aws_account_id = if(isnull(owner_id), account_id, owner_id)
EVAL-ip = case(match(source, ".+\:ec2_instances"), mvappend(if(ip_address="null",null(), ip_address), if(private_ip_address="null",null(), private_ip_address)))
EVAL-region = if(isnotnull(region), region, substr(availability_zone,1,(len(availability_zone) - 1)))
EVAL-vendor = "AWS"
EVAL-vendor_account = if(isnull(owner_id), account_id, owner_id)
EVAL-vendor_region = if(isnotnull(region), region, substr(availability_zone,1,(len(availability_zone) - 1)))
EVAL-vpc_id = case(vpc_id!="null", vpc_id)

# Enterprise Security Identities Framework Interface - IAM_USERS
EVAL-identity = case(match(source, ".+\:iam_users"), mvappend(if(user_id="" OR user_id="null", null(), user_id), if(user_name="" OR user_name="null", null(), user_name)))

# Enterprise Security Assets Framework Interface - EC2_INSTANCES
EVAL-dns = case(match(source, ".+\:ec2_instances"), mvappend(if(public_dns_name="" OR public_dns_name="null", null(), public_dns_name), if(private_dns_name="null", null(), private_dns_name)))
EVAL-nt_host = case(id!="null", id)
EVAL-subnet_id = case(subnet_id!="null", subnet_id)

# Mapping for ITSI IaaS Module
EVAL-custom_tag = split(custom_tag_str, ",")
EVAL-hypervisor_name = case(match(source, ".+\:ec2_instances"), hypervisor)
EVAL-power_state = case(match(source, ".+\:ec2_instances"), state)
EVAL-storage_capacity = case(match(source, ".+\:ec2_volumes"), size * 1073741824)
EVAL-vendor_product = case(match(source, "^.*:ec2_.*$"), "EC2")
EVAL-virtual_network_id = case(vpc_id!="null", vpc_id)
EVAL-virtual_subnet_id = case(subnet_id!="null", subnet_id)
EVAL-vm_id = case(match(source, ".+\:ec2_instances"), id)
EVAL-vm_os = case(match(lower(platform),"^.*linux.*$"), "Linux", match(lower(platform),"^.*windows.*$"), "Windows", true(), "Unknown")


## Lookups ##
#############
# Mapping for ITSI IaaS Module
LOOKUP-sizeToAttributes = sizeToAttributesLookup instance_type OUTPUT cpu_cores, mem_capacity


##################################
###      AWS Metadata          ###
##################################


[aws:metadata]
MAX_TIMESTAMP_LOOKAHEAD = 1
SHOULD_LINEMERGE = false
TRUNCATE = 8388608
KV_MODE = json
ANNOTATE_PUNCT = false

## Mapping for ITSI IaaS Module ## - https://docs.splunk.com/Documentation/ITSICSM/2.4.0/ITSICSM/AbouttheSplunkITSIModuleforCloudServices
## Enterprise Security Assets and Identities Framework Interface ##

## FIELDALIAS ##
################
# Enterprise Security Identities Framework Interface - IAM_USERS
FIELDALIAS-CreateDate-for-aws-description = CreateDate as startDate
FIELDALIAS-user-id-for-aws-description = UserId AS user_id
FIELDALIAS-username-for-aws-description = UserName AS user_name

# Enterprise Security Assets Framework Interface - EC2_INSTANCES
# fields image_name and instance_type are being mapped automatically
FIELDALIAS-image_name-for-assets-lookup = 'Image.Attributes.Name' AS image_name

# Mapping for ITSI IaaS Module
FIELDALIAS-availabiity_zone = AvailabilityZone AS availability_zone
FIELDALIAS-vm_name = 'Tags.Name' as vm_name
FIELDALIAS-vm_size = InstanceType AS vm_size


## EVAL ##
##########
# Common CIM - [Enterprise Security Assets Framework Interface] and [ITSI IaaS Module] specific fields -- EVAL-ip,
# EVAL-vendor_account, EVAL-vendor_region, EVAL-vpc_id
EVAL-account_id = if(isnull(OwnerId), account_id, OwnerId)
# aws_account_id - unify account ID field
EVAL-aws_account_id = if(isnull(OwnerId), account_id, OwnerId)
EVAL-ip = case(match(source, ".+\:ec2_instances"), mvappend(if(PublicIpAddress="null",null(), PublicIpAddress), if(PrivateIpAddress="null",null(), PrivateIpAddress)))
EVAL-region = if(isnotnull(region), region, substr(AvailabilityZone,1,(len(AvailabilityZone) - 1)))
EVAL-vendor = "AWS"
EVAL-vendor_account = if(isnull(OwnerId), account_id, OwnerId)
EVAL-vendor_region = if(isnotnull(region), region, substr(AvailabilityZone,1,(len(AvailabilityZone) - 1)))
EVAL-vpc_id = case(VpcId!="null", VpcId)

# Enterprise Security Identities Framework Interface - IAM_USERS
EVAL-identity = case(match(source, ".+\:iam_users"), mvappend(if(UserId="" OR UserId="null", null(), UserId), if(UserName="" OR UserName="null", null(), UserName)))

# Enterprise Security Assets Framework Interface - EC2_INSTANCES
EVAL-dns = case(match(source, ".+\:ec2_instances"), mvappend(if(PublicDnsName="" OR PublicDnsName="null", null(), PublicDnsName), if(PrivateDnsName="null", null(), PrivateDnsName)))
EVAL-nt_host = case(InstanceId!="null", InstanceId)
EVAL-subnet_id = case(SubnetId!="null", SubnetId)

# Mapping for ITSI IaaS Module
EVAL-custom_tag = mvzip('Tags{}.Key','Tags{}.Value',":")
EVAL-hypervisor_name = case(match(source, ".+\:ec2_instances"), Hypervisor)
EVAL-power_state = case(match(source, ".+\:ec2_instances"), 'State.Name')
EVAL-storage_capacity = case(match(source, ".+\:ec2_volumes"), Size * 1073741824)
EVAL-vendor_product = case(match(source, "^.*:ec2_.*$"), "EC2")
EVAL-virtual_network_id = case(VpcId!="null", VpcId)
EVAL-virtual_subnet_id = case(SubnetId!="null", SubnetId)
EVAL-vm_id = case(match(source, ".+\:ec2_instances"), InstanceId)
EVAL-vm_os = case(match(lower(Platform),"^.*linux.*$"), "Linux", match(lower(Platform),"^.*windows.*$"), "Windows", true(), "Unknown")


## Lookups ##
#############
# Mapping for ITSI IaaS Module
LOOKUP-sizeToAttributes = sizeToAttributesLookup instance_type as InstanceType OUTPUT cpu_cores, mem_capacity


##################################
###    AWS CloudWatch Logs     ###
##################################

###################
##   GuardDuty   ##
###################
[aws:cloudwatchlogs:guardduty]

## Aliases ##
#############
# non-CIM
FIELDALIAS-findingType = detail.type as finding_category
FIELDALIAS-raw_gd_type = detail.type AS raw_gd_type
FIELDALIAS-aws-guardduty-signature = detail.title AS signature

# Common CIM
FIELDALIAS-aws-guardduty-vendor_account = detail.accountId as vendor_account
FIELDALIAS-aws-guardduty-vendor_region = detail.region AS vendor_region

# Alerts CIM - https://docs.splunk.com/Documentation/CIM/4.18.0/User/Alerts
# TAGS alert
FIELDALIAS-aws-guardduty-description = detail.description AS description
FIELDALIAS-aws-guardduty-id = detail.id AS id
FIELDALIAS-aws-guardduty-severity_id = detail.severity AS severity_id
FIELDALIAS-aws-guardduty-signature_id = detail.type AS signature_id
FIELDALIAS-gd-type-subj = detail.type AS subject


## Eval ##
##########
# Common CIM
EVAL-app = "AWS GuardDuty"
EVAL-severity = case(severity_id<=4, "LOW", severity_id<=7, "MEDIUM", severity_id<=9, "HIGH")

# Alerts CIM
EVAL-dest = if('detail.service.resourceRole'="TARGET", case('detail.resource.resourceType'="Instance", 'detail.resource.instanceDetails.instanceId', \
            'detail.resource.resourceType'="AccessKey", 'detail.resource.accessKeyDetails.principalId', 'detail.resource.resourceType'="S3Bucket", coalesce('detail.resource.s3BucketDetails{}.name', \
            'detail.resource.s3BucketDetails{}.arn'), 1==1, ""), null())
EVAL-dest_name = if('detail.service.resourceRole'="TARGET" AND 'detail.resource.resourceType'="AccessKey", 'detail.resource.accessKeyDetails.userName', null())
EVAL-findingType = type
EVAL-src = case('detail.service.resourceRole'="ACTOR", case('detail.resource.resourceType'="Instance", 'detail.resource.instanceDetails.instanceId', \
            'detail.resource.resourceType'="AccessKey",'detail.resource.accessKeyDetails.principalId', 'detail.resource.resourceType'="S3Bucket", coalesce('detail.resource.s3BucketDetails{}.name', \
            'detail.resource.s3BucketDetails{}.arn'), 1==1, ""), 'detail.service.resourceRole'="TARGET", coalesce('detail.service.action.awsApiCallAction.remoteIpDetails.ipAddressV4', \
            'detail.service.action.networkConnectionAction.remoteIpDetails.ipAddressV4', 'detail.service.action.networkConnectionAction.localIpDetails.ipAddressV4'))
EVAL-src_name = if('detail.service.resourceRole'="ACTOR" AND 'detail.resource.resourceType'="AccessKey", 'detail.resource.accessKeyDetails.userName', null())
EVAL-type = "alert"
EVAL-user = if('detail.resource.resourceType'="AccessKey", 'detail.resource.accessKeyDetails.principalId', null())
EVAL-vendor_product = "AWS GuardDuty"


## Lookups ##
#############
# Alerts CIM
LOOKUP-guardduty-mitre_technique_id = aws_gd_mitre_technique_id_lookup signature_id OUTPUTNEW mitre_technique_id
LOOKUP-gd-src-dest-type = aws-gd-resourceType_lookup resource_type AS detail.resource.resourceType, resource_role AS detail.service.resourceRole OUTPUTNEW src_type, dest_type


###################
## VPC Flow Logs ##
###################
[aws:cloudwatchlogs:vpcflow]
SHOULD_LINEMERGE = false
TIME_FORMAT = %s
TIME_PREFIX = ^(?>\S+\s){10}
MAX_TIMESTAMP_LOOKAHEAD = 10  # makes sure account_id is not used for timestamp

## Extraction ##
################
EXTRACT-vpcflowlog=^\s*(\d{4}-\d{2}-\d{2}.\d{2}:\d{2}:\d{2}[.\d\w]*)?\s*(?<version>[^\s]+)\s+(?<account_id>[^\s]+)\s+(?<interface_id>[^\s]+)\s+(?<src_ip>[^\s]+)\s+(?<dest_ip>[^\s]+)\s+(?<src_port>[^\s]+)\s+(?<dest_port>[^\s]+)\s+(?<protocol_code>[^\s]+)\s+(?P<packets>[^\s]+)\s+(?<bytes>[^\s]+)\s+(?<start_time>[^\s]+)\s+(?<end_time>[^\s]+)\s+(?<vpcflow_action>[^\s]+)\s+(?<log_status>[^\s]+)
REPORT-region = extract-region

## Aliases ##
#############
FIELDALIAS-aws-account-id = account_id as aws_account_id # unify account ID field
FIELDALIAS-dest = dest_ip as dest
FIELDALIAS-dvc = interface_id as dvc
FIELDALIAS-src = src_ip as src
FIELDALIAS-vendor_account = account_id as vendor_account

## Eval ##
##########
EVAL-bytes = if(bytes!="-", bytes, "unknown")
EVAL-dest = if(dest!="-", dest, "unknown")
EVAL-dest_ip = if(dest_ip!="-", dest_ip, "unknown")
EVAL-dest_port = if(dest_port!="-", dest_port, "unknown")
EVAL-duration=end_time-start_time
EVAL-packets = if(packets!="-", packets, "unknown")
EVAL-protocol_code = if(protocol_code!="-", protocol_code, "unknown")
EVAL-src = if(src!="-", src, "unknown")
EVAL-src_port = if(src_port!="-", src_port, "unknown")
EVAL-src_ip = if(src_ip!="-", src_ip, "unknown")
EVAL-vpcflow_action = if(vpcflow_action!="-", vpcflow_action, "unknown")

## Lookups ##
##########
LOOKUP-action=vpcflow_action_lookup vpcflow_action OUTPUT action
LOOKUP-protocol-and-transport=vpcflow_protocol_code_lookup protocol_code OUTPUT protocol transport protocol_full_name

##################################
###      AWS Inspector         ###
##################################
[aws:inspector]

EVAL-type = "event"
EXTRACT-account_id_and_region = (?P<account_id>\d+):(?P<region>[\w-]+) in source

FIELDALIAS-state_as_status = state as status
FIELDALIAS-created_at_as_time = createdAt as time
FIELDALIAS-service_as_app = service as app
FIELDALIAS-title_as_subject = title as subject
FIELDALIAS-account_id_as_user_id = account_id as user_id
FIELDALIAS-account_id_as_aws_account_id = account_id as aws_account_id


##################################
###         AWS S3             ###
##################################

[aws:s3]
SHOULD_LINEMERGE = false

## Classic Load Balancer ##
[source::...(/|\\)\d+_elasticloadbalancing_*.log]
EXTRACT-elb = ^\s*(?P<timestamp>\S+)(\s+(?P<elb>\S+))(\s+(?P<client_ip>[\d.]+):(?P<client_port>\d+))(\s+(?P<backend>\S+))(\s+(?P<request_processing_time>\S+))(\s+(?P<backend_processing_time>\S+))(\s+(?P<response_processing_time>\S+))(\s+(?P<elb_status_code>\S+))(\s+(?P<backend_status_code>\S+))(\s+(?P<received_bytes>\d+))(\s+(?P<sent_bytes>\d+))(\s+"(?P<request>[^"]+)")(\s+"(?P<user_agent>[^"]+)")(\s+(?P<ssl_cipher>\S+))(\s+(?P<ssl_protocol>\S+))

EVAL-rtt = request_processing_time + backend_processing_time + response_processing_time

## Application Load Balancer ##
[source::...(/|\\)\d+_elasticloadbalancing_*.log.gz]
EXTRACT-elb = ^\s*(?P<type>\S+)(\s+(?P<timestamp>\S+))(\s+(?P<elb>\S+))(\s+(?P<client_ip>[\d.]+):(?P<client_port>\d+))(\s+(?P<target>\S+))(\s+(?P<request_processing_time>\S+))(\s+(?P<target_processing_time>\S+))(\s+(?P<response_processing_time>\S+))(\s+(?P<elb_status_code>\S+))(\s+(?P<target_status_code>\S+))(\s+(?P<received_bytes>\d+))(\s+(?P<sent_bytes>\d+))(\s+"(?P<request>[^"]+)")(\s+"(?P<user_agent>[^"]+)")(\s+(?P<ssl_cipher>\S+))(\s+(?P<ssl_protocol>\S+))(\s+(?P<target_group_arn>\S+))(\s+"(?P<trace_id>[^"]+)")(\s+"(?P<domain_name>[^"]+)")?(\s+"(?P<chosen_cert_arn>[^"]+)")?(\s+(?P<matched_rule_priority>\S+))?(\s+(?P<request_creation_time>\S+))?(\s+"(?P<actions_executed>[^"]+)")?(\s+"(?P<redirect_url>[^"]+)")?(\s+"(?P<error_reason>[^"]+)")?

EVAL-rtt = request_processing_time + target_processing_time + response_processing_time

[aws:s3:accesslogs]
SHOULD_LINEMERGE=false
TIME_FORMAT=%d/%b/%Y:%H:%M:%S %z
TIME_PREFIX=\s\[
EXTRACT-s3 = ^\s*(?P<bucket_owner>\S+)(\s+(?P<bucket_name>\S+))(\s+\[(?P<request_time>[\w\/\s:+]+)\])(\s+(?P<remote_ip>\S+))(\s+(?P<requester>\S+))(\s+(?P<request_id>\S+))(\s+(?P<operation>\S+))(\s+(?P<key>\S+))(\s+"((?P<http_method>\w+)?\s*(?P<uri>.+[ ])?\s*(?P<uri_protocol>.+[^"]))")(\s+(?P<http_status>\S+))(\s+(?P<error_code>\S+))(\s+(?P<bytes_sent>\S+))(\s+(?P<object_size>\S+))(\s+(?P<total_time>\S+))(\s+(?P<turn_around_time>\S+))(\s+"(?P<referrer>[^"]+)")(\s+"(?P<user_agent>[^"]+)")(\s+(?P<version_id>\S+))(\s+(?P<host_id>\S+))?(\s+(?P<signature_version>\S+))?(\s+(?P<cipher_suite>\S+))?(\s+(?P<authentication_type>\S+))?(\s+(?P<host_header>\S+))?(\s+(?P<tls_version>\S+))?

# Web CIM Mapping
FIELDALIAS-app = host_header as app
FIELDALIAS-duration = total_time as duration
FIELDALIAS-dest = host_header as dest
FIELDALIAS-file_path = key as file_path
FIELDALIAS-http_referrer = referer as http_referrer
FIELDALIAS-http_user_agent = user_agent as http_user_agent
FIELDALIAS-response_time = turn_around_time as response_time
FIELDALIAS-src = remote_ip as src
FIELDALIAS-storage_name = bucket as storage_name
FIELDALIAS-url_domain = host_header as url_domain

EVAL-bytes_out = if(bytes_sent!="-", bytes_sent, 0)
EVAL-bytes = if(bytes!="-", bytes, 0)
EVAL-error_code = if(error_code != "-", error_code, "")
# spliting uri(/path/to/file?param1=value1&param2=value2&param2=value2) with "?"
EVAL-uri_path = mvindex(split(uri, "?"), 0)
EVAL-uri_query = mvindex(split(uri, "?"), 1)
EVAL-user = if(authentication_type == "authenticated", requester, "")

[aws:cloudfront:accesslogs]

EXTRACT-cloudfront_web = ^\s*(?P<date>[0-9-]+)\s+(?P<time>[0-9:]+)\s+(?P<x_edge_location>[^\s]+)\s+(?P<sc_bytes>\d+)\s+(?P<c_ip>[a-fA-F0-9.:]+)\s+(?P<cs_method>[^\s]+)\s+(?P<cs_host>[^\s]+)\s+(?P<cs_uri_stem>[^\s]+)\s+(?P<sc_status>\d+)\s+(?P<cs_referer>[^\s]+)\s+(?P<cs_user_agent>[^\s]+)\s+(?P<cs_uri_query>[^\s]+)\s+(?P<cs_cookie>[^\s]+)\s+(?P<x_edge_result_type>[^\s]+)\s+(?P<x_edge_request_id>[^\s]+)\s+(?P<x_host_header>[^\s]+)\s+(?P<cs_protocol>[^\s]+)\s+(?P<cs_bytes>[^\s]+)\s+(?P<time_taken>[0-9.]+)\s+(?P<x_forwarded_for>[^\s]+)\s+(?P<ssl_protocol>[^\s]+)\s+(?P<ssl_cipher>[^\s]+)\s+(?P<x_edge_response_result_type>[^\s]+)
EXTRACT-cloudfront_rtmp = ^\s*(?P<date>[0-9-]+)\s+(?P<time>[0-9:]+)\s+(?P<x_edge_location>[^\s]+)\s+(?P<c_ip>[a-fA-F0-9.:]+)\s+(?P<x_event>[^\s]+)\s+(?P<sc_bytes>\d+)\s+(?P<x_cf_status>[^\s]+)\s+(?P<x_cf_client_id>[^\s]+)\s+(?P<cs_uri_stem>[^\s]+)\s+(?P<cs_uri_query>[^\s]+)\s+(?P<c_referrer>[^\s]+)\s+(?P<x_page_url>[^\s]+)\s+(?P<c_user_agent>[^\s]+)\s+(?P<x_sname>[^\s]+)\s+(?P<x_sname_query>[^\s]+)\s+(?P<x_file_ext>[^\s]+)\s+(?P<x_sid>[^\s]+)

FIELDALIAS-client_ip = c_ip as client_ip

EVAL-time_taken=time_taken*1000

# take twice due to AWS's bugfix.
# https://forums.aws.amazon.com/thread.jspa?threadID=134017
EVAL-cs_uri_stem=urldecode(urldecode(cs_uri_stem))

LOOKUP-x_edge_location=cloudfront_edge_location_lookup x_edge_location OUTPUT edge_location_name


###################################
###           AWS SQS           ###
###################################
[aws:sqs]
KV_MODE = json


########################################################
###  Forward Compatibility Support (Boto2 -> Boto3)  ###
########################################################
[source::*:ec2_reserved_instances]
FIELDALIAS-id_alias = ReservedInstancesId as id
FIELDALIAS-offering_type_alias = OfferingType as offering_type
FIELDALIAS-instance_count_alias = InstanceCount as instance_count
FIELDALIAS-availability_zone_alias = AvailabilityZone as availability_zone
FIELDALIAS-instance_type_alias = InstanceType as instance_type
FIELDALIAS-instance_tenancy_alias = InstanceTenancy as instance_tenancy
FIELDALIAS-state_alias = State as state
FIELDALIAS-fixed_price_alias = FixedPrice as fixed_price
FIELDALIAS-description_alias = ProductDescription as description
FIELDALIAS-usage_price_alias = UsagePrice as usage_price
FIELDALIAS-currency_code_alias = CurrencyCode as currency_code
FIELDALIAS-start_alias = Start as start
FIELDALIAS-end_alias = End as end
FIELDALIAS-duration_alias = Duration as duration
