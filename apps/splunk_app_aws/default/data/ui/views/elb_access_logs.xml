<form script="base_page.js" version="1.1">
  <label>ELB - Traffic Analysis</label>
  <fieldset submitButton="false">
    <input type="multiselect" token="accountId" id="input1_all" searchWhenChanged="true">
      <label>Account ID</label>
      <default>*</default>
      <choice value="*">All</choice>
      <search>
        <query>
          <![CDATA[ |aclinputlookup all_account_ids | mvcombine delim=", " name | nomv name | eval title=account_id." (".name.")" ]]>
        </query>
      </search>
      <prefix>(</prefix>
      <suffix>)</suffix>
      <valuePrefix>source="*/</valuePrefix>
      <valueSuffix>/*"</valueSuffix>
      <delimiter> OR </delimiter>
      <fieldForLabel>title</fieldForLabel>
      <fieldForValue>account_id</fieldForValue>
    </input>
    <input type="multiselect" token="region" id="input2_all" searchWhenChanged="true">
      <label>Regions</label>
      <default>*</default>
      <choice value="*">All</choice>
      <search>
        <query>
          <![CDATA[ |inputlookup regions ]]>
        </query>
      </search>
      <prefix>(</prefix>
      <suffix>)</suffix>
      <valuePrefix>source="*/</valuePrefix>
      <valueSuffix>/*"</valueSuffix>
      <delimiter> OR </delimiter>
      <fieldForLabel>label</fieldForLabel>
      <fieldForValue>region</fieldForValue>
    </input>
    <input type="time" searchWhenChanged="true">
      <label>Time Range</label>
      <default>
          <earliest>-3d</earliest>
          <latest>now</latest>
      </default>
    </input>
  </fieldset>
  <row>
    <panel>
      <single>
        <title>Total Entries</title>
        <search>
          <query>| tstats allow_old_summaries=true count FROM datamodel=ELB_Access_Log where $accountId$ $region$</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="field">count</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">
            <![CDATA[
                            search?q=search `aws-accesslog-sourcetype("elb")` $accountId$ $region$&earliest=$earliest$&latest=$latest$
                        ]]>
          </link>
        </drilldown>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total ELBs</title>
        <search>
          <query>| tstats allow_old_summaries=true dc(elb_access_log.elb) as count FROM datamodel=ELB_Access_Log where $accountId$ $region$</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="field">count</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">
            <![CDATA[
                            search?q=search `aws-accesslog-sourcetype("elb")` $accountId$ $region$
                            | dedup elb
                            | table elb&earliest=$earliest$&latest=$latest$
                        ]]>
          </link>
        </drilldown>
      </single>
    </panel>
    <panel>
      <single>
        <title>Unique Clients</title>
        <search>
          <query>| tstats allow_old_summaries=true dc(elb_access_log.client_ip) as count FROM datamodel=ELB_Access_Log where $accountId$ $region$</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="field">count</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">
            <![CDATA[
                            search?q=search `aws-accesslog-sourcetype("elb")` $accountId$ $region$
                            | dedup client_ip
                            | table client_ip&earliest=$earliest$&latest=$latest$
                        ]]>
          </link>
        </drilldown>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total Data Sent</title>
        <search>
          <query>| tstats allow_old_summaries=true sum(elb_access_log.sent_bytes) as sent_bytes FROM datamodel=ELB_Access_Log where $accountId$ $region$ | eval sent_bytes = case(sent_bytes&gt;1024*1024*1024, tostring(round(sent_bytes/1024/1024/1024,2))+" GB", sent_bytes&gt;1024*1024, tostring(round(sent_bytes/1024/1024,2))+" MB", sent_bytes&gt;1024, tostring(round(sent_bytes/1024,2))+" KB", true(), tostring(sent_bytes)+" B")</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="field">sent_bytes</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total Data Received</title>
        <search>
          <query>| tstats allow_old_summaries=true sum(elb_access_log.received_bytes) as received_bytes FROM datamodel=ELB_Access_Log where $accountId$ $region$ | eval received_bytes = case(received_bytes&gt;1024*1024*1024, tostring(round(received_bytes/1024/1024/1024,2))+" GB", received_bytes&gt;1024*1024, tostring(round(received_bytes/1024/1024,2))+" MB", received_bytes&gt;1024, tostring(round(received_bytes/1024,2))+" KB", true(), tostring(received_bytes)+" B")</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="field">received_bytes</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <map>
        <title>Traffic Size by Location (Bytes)</title>
        <search>
          <query>| tstats allow_old_summaries=true sum(elb_access_log.sent_bytes) as sent_bytes FROM datamodel=ELB_Access_Log where $accountId$ $region$ by elb_access_log.client_ip_lat elb_access_log.client_ip_lon elb_access_log.client_ip_country
| geostats globallimit=0 latfield=elb_access_log.client_ip_lat longfield=elb_access_log.client_ip_lon sum(sent_bytes) by elb_access_log.client_ip_country</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="height">300</option>
        <option name="mapping.choroplethLayer.colorBins">5</option>
        <option name="mapping.choroplethLayer.colorMode">auto</option>
        <option name="mapping.choroplethLayer.maximumColor">0xDB5800</option>
        <option name="mapping.choroplethLayer.minimumColor">0x2F25BA</option>
        <option name="mapping.choroplethLayer.neutralPoint">0</option>
        <option name="mapping.choroplethLayer.shapeOpacity">0.75</option>
        <option name="mapping.choroplethLayer.showBorder">1</option>
        <option name="mapping.data.maxClusters">100</option>
        <option name="mapping.fieldColors">{REJECT:0xd93f3c,ACCEPT:0x65a637}</option>
        <option name="mapping.map.center">(42.879094,-97.381205)</option>
        <option name="mapping.map.panning">1</option>
        <option name="mapping.map.scrollZoom">0</option>
        <option name="mapping.map.zoom">3</option>
        <option name="mapping.markerLayer.markerMaxSize">50</option>
        <option name="mapping.markerLayer.markerMinSize">10</option>
        <option name="mapping.markerLayer.markerOpacity">0.8</option>
        <option name="mapping.showTiles">1</option>
        <option name="mapping.tileLayer.maxZoom">7</option>
        <option name="mapping.tileLayer.minZoom">0</option>
        <option name="mapping.tileLayer.tileOpacity">1</option>
        <option name="mapping.type">marker</option>
        <option name="refresh.display">progressbar</option>
      </map>
    </panel>
    <panel>
      <map>
        <title>Request Count by Location</title>
        <search>
          <query>| tstats allow_old_summaries=true count FROM datamodel=ELB_Access_Log where $accountId$ $region$ by elb_access_log.client_ip_lat elb_access_log.client_ip_lon elb_access_log.client_ip_country
| geostats globallimit=0 latfield=elb_access_log.client_ip_lat longfield=elb_access_log.client_ip_lon sum(count) by elb_access_log.client_ip_country</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="height">300</option>
        <option name="mapping.choroplethLayer.colorBins">5</option>
        <option name="mapping.choroplethLayer.colorMode">auto</option>
        <option name="mapping.choroplethLayer.maximumColor">0xDB5800</option>
        <option name="mapping.choroplethLayer.minimumColor">0x2F25BA</option>
        <option name="mapping.choroplethLayer.neutralPoint">0</option>
        <option name="mapping.choroplethLayer.shapeOpacity">0.75</option>
        <option name="mapping.choroplethLayer.showBorder">1</option>
        <option name="mapping.data.maxClusters">100</option>
        <option name="mapping.fieldColors">{REJECT:0xd93f3c,ACCEPT:0x65a637}</option>
        <option name="mapping.map.center">(42.879094,-97.381205)</option>
        <option name="mapping.map.panning">1</option>
        <option name="mapping.map.scrollZoom">0</option>
        <option name="mapping.map.zoom">3</option>
        <option name="mapping.markerLayer.markerMaxSize">50</option>
        <option name="mapping.markerLayer.markerMinSize">10</option>
        <option name="mapping.markerLayer.markerOpacity">0.8</option>
        <option name="mapping.showTiles">1</option>
        <option name="mapping.tileLayer.maxZoom">7</option>
        <option name="mapping.tileLayer.minZoom">0</option>
        <option name="mapping.tileLayer.tileOpacity">1</option>
        <option name="mapping.type">marker</option>
        <option name="refresh.display">progressbar</option>
      </map>
    </panel>
  </row>
  <row>
    <panel>
      <title>Error Entries</title>
      <single>
        <search>
          <query>| tstats allow_old_summaries=true count FROM datamodel=ELB_Access_Log where elb_access_log.elb_status_code&gt;399 $accountId$ $region$</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="colorBy">value</option>
        <option name="colorMode">none</option>
        <option name="drilldown">all</option>
        <option name="field">count</option>
        <option name="rangeColors">["0x555","0xd93f3c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">ELB Errors</option>
        <option name="useColors">1</option>
        <drilldown>
          <link target="_blank">
            <![CDATA[
                            search?q=search `aws-accesslog-sourcetype("elb")` $accountId$ $region$ elb_status_code>399&earliest=$earliest$&latest=$latest$
                        ]]>
          </link>
        </drilldown>
      </single>
      <single>
        <search>
          <query>| tstats allow_old_summaries=true count FROM datamodel=ELB_Access_Log where elb_access_log.backend_status_code&gt;399 $accountId$ $region$</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="colorBy">value</option>
        <option name="colorMode">none</option>
        <option name="drilldown">all</option>
        <option name="field">count</option>
        <option name="rangeColors">["0x555","0xd93f3c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">Backend Errors</option>
        <option name="useColors">1</option>
        <drilldown>
          <link target="_blank">
            <![CDATA[
                            search?q=search `aws-accesslog-sourcetype("elb")` $accountId$ $region$ (backend_status_code>399 OR target_status_code>399)&earliest=$earliest$&latest=$latest$
                        ]]>
          </link>
        </drilldown>
      </single>
    </panel>
    <panel>
      <title>Average Processing Time</title>
      <single>
        <search>
          <query>| tstats allow_old_summaries=true avg(elb_access_log.request_processing_time) as request_processing_time avg(elb_access_log.response_processing_time) as response_processing_time avg(elb_access_log.backend_processing_time) as backend_processing_time FROM datamodel=ELB_Access_Log where ($accountId$ $region$) AND elb_access_log.request_processing_time!=-1 AND elb_access_log.response_processing_time!=-1 AND elb_access_log.backend_processing_time!=-1 | eval total_processing_time = request_processing_time*1000+response_processing_time*1000+backend_processing_time*1000 | stats avg(total_processing_time) as average_time | eval average_time=tostring(round(average_time,2))+" ms"</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="field">average_time</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">Average Total Processing Time</option>
        <drilldown>
          <link target="_blank">
            <![CDATA[
                            search?q=search `aws-accesslog-sourcetype("elb")` $accountId$ $region$ request_processing_time!=-1 response_processing_time!=-1 ((target_processing_time=* AND target_processing_time!=-1) OR (backend_processing_time=* AND backend_processing_time!=-1))
                            | eval request_processing_time=request_processing_time*1000, backend_processing_time=if(isnull(backend_processing_time), target_processing_time*1000, backend_processing_time*1000), response_processing_time=response_processing_time*1000, total_processing_time = request_processing_time %2B backend_processing_time %2B response_processing_time
                            | stats avg(total_processing_time) as avg_total_time, avg(request_processing_time) as avg_request_time, avg(backend_processing_time) as avg_backend_time, avg(response_processing_time) as avg_response_time
                            | table avg_total_time, avg_request_time, avg_backend_time, avg_response_time&earliest=$earliest$&latest=$latest$
                        ]]>
          </link>
        </drilldown>
      </single>
      <single>
        <search>
          <query>| tstats allow_old_summaries=true avg(elb_access_log.backend_processing_time) as backend_processing_time FROM datamodel=ELB_Access_Log where ($accountId$ $region$) AND elb_access_log.backend_processing_time!=-1 | eval average_time=tostring(round(backend_processing_time * 1000,2))+" ms"</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="field">average_time</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">Average Backend Processing Time</option>
        <drilldown>
          <link target="_blank">
            <![CDATA[
                            search?q=search `aws-accesslog-sourcetype("elb")` $accountId$ $region$ request_processing_time!=-1 response_processing_time!=-1 ((target_processing_time=* AND target_processing_time!=-1) OR (backend_processing_time=* AND backend_processing_time!=-1))
                            | eval request_processing_time=request_processing_time*1000, backend_processing_time=if(isnull(backend_processing_time), target_processing_time*1000, backend_processing_time*1000), response_processing_time=response_processing_time*1000, total_processing_time = request_processing_time %2B backend_processing_time %2B response_processing_time
                            | stats avg(total_processing_time) as avg_total_time, avg(request_processing_time) as avg_request_time, avg(backend_processing_time) as avg_backend_time, avg(response_processing_time) as avg_response_time
                            | table avg_total_time, avg_request_time, avg_backend_time, avg_response_time&earliest=$earliest$&latest=$latest$
                        ]]>
          </link>
        </drilldown>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Top Error-Causing Requests</title>
        <search>
          <query>| tstats allow_old_summaries=true count FROM datamodel=ELB_Access_Log where ($accountId$ $region$) AND (elb_access_log.elb_status_code!=200 OR elb_access_log.backend_status_code!=200) by elb_access_log.request, elb_access_log.elb_status_code, elb_access_log.backend_status_code | rename count as "Count", elb_access_log.request as "Request", elb_access_log.elb_status_code as "ELB Status", elb_access_log.backend_status_code as "Backend Status" | table Request, "ELB Status", "Backend Status", Count | sort - Count</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="count">5</option>
        <option name="drilldown">row</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel>
      <chart>
        <title>Error Count</title>
        <search>
          <query>| tstats allow_old_summaries=true prestats=t count FROM datamodel=ELB_Access_Log where ($accountId$ $region$) AND (elb_access_log.elb_status_code!=200 OR elb_access_log.backend_status_code!=200) by elb_access_log.elb _time | timechart count by elb_access_log.elb | fillnull value=0</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Top Time-Consuming Requests</title>
        <search>
          <query>| tstats allow_old_summaries=true avg(elb_access_log.request_processing_time) as request_processing_time avg(elb_access_log.response_processing_time) as response_processing_time avg(elb_access_log.backend_processing_time) as backend_processing_time FROM datamodel=ELB_Access_Log where ($accountId$ $region$) AND elb_access_log.request_processing_time!=-1 AND elb_access_log.response_processing_time!=-1 AND elb_access_log.backend_processing_time!=-1 by elb_access_log.request | eval total_processing_time = request_processing_time*1000+backend_processing_time*1000+response_processing_time*1000  | fields elb_access_log.request total_processing_time        | sort - total_processing_time             | eval total_processing_time = round(total_processing_time, 2) | rename elb_access_log.request as Request, total_processing_time as "Processing Time (ms)"</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="count">5</option>
        <option name="drilldown">row</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel>
      <chart>
        <title>Processing Time (ms)</title>
        <search>
          <query>| tstats allow_old_summaries=true prestats=t avg(elb_access_log.request_processing_time)  avg(elb_access_log.response_processing_time) avg(elb_access_log.backend_processing_time) FROM datamodel=ELB_Access_Log where ($accountId$ $region$) AND elb_access_log.request_processing_time!=-1 AND elb_access_log.response_processing_time!=-1 AND elb_access_log.backend_processing_time!=-1 by _time span=1h | timechart avg(elb_access_log.request_processing_time) AS "Request", avg(elb_access_log.response_processing_time) AS "Backend", avg(elb_access_log.backend_processing_time) AS "Response" | eval Request=round(Request*1000,2), Backend=round(Backend*1000,2), Response=round(Response*1000,2)</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">all</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">
            <![CDATA[
             search?q=| from datamodel:ELB_Access_Log | eval backend_processing_time=if(isnull(backend_processing_time), target_processing_time, backend_processing_time), backend_status_code=if(isnull(backend_status_code), target_status_code, backend_status_code) | rex field=elb "app/(%3F<alb_name>.*%3F)/" | eval elb=if(isnull(type), elb, alb_name) | fields elb, client_ip, sent_bytes, received_bytes, elb_status_code, backend_status_code, request_processing_time, response_processing_time, backend_processing_time, request, _time | search request_processing_time!=-1 backend_processing_time!=-1 response_processing_time!=-1 | eval request_processing_time=request_processing_time*1000, backend_processing_time=backend_processing_time*1000, response_processing_time=response_processing_time*1000&earliest=$earliest$&latest=$latest$
             ]]>
          </link>
        </drilldown>
      </chart>
    </panel>
  </row>
</form>
